openapi: 3.0.1
info:
  title: Basic banking system API
  description: Submission challenge 5
  version: 1.0.0
servers:
  - url: POST http://localhost:3000/api/v1
  
security:
  - bearerAuth: []  

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                identity_type:
                  type: string
                identity_number:
                  type: string
                address:
                  type: string
              required:
                - name
                - email
                - password
                - identity_type
                - identity_number
                - address
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '400':
          description: Bad request or email already in use
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: Bad request or invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /users:
    get:
      summary: Get list of users
      responses:
        '200':
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
  /accounts:
    post:
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users_id:
                  type: integer
                bank_name:
                  type: string
                bank_account_number:
                  type: string
                balance:
                  type: number
              required:
                - users_id
                - bank_name
                - bank_account_number
                - balance
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Account'
        '400':
          description: Bad request or invalid user ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /accounts/{id}:
    get:
      summary: Get account by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Account found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
  /transactions:
    post:
      summary: Create a new transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                source_account_id:
                  type: integer
                destination_account_id:
                  type: integer
                amount:
                  type: number
              required:
                - source_account_id
                - destination_account_id
                - amount
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request or insufficient balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /transactions/{id}:
    get:
      summary: Get transaction by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Transaction found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT 
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        profiles:
          type: object
          properties:
            identity_type:
              type: string
            identity_number:
              type: string
            address:
              type: string
    Account:
      type: object
      properties:
        id:
          type: integer
        bank_name:
          type: string
        bank_account_number:
          type: string
        balance:
          type: number
        users_id:
          type: integer
    Transaction:
      type: object
      properties:
        id:
          type: integer
        source_account_id:
          type: integer
        destination_account_id:
          type: integer
        amount:
          type: number
        source_account:
          $ref: '#/components/schemas/Account'
        destination_account:
          $ref: '#/components/schemas/Account'
